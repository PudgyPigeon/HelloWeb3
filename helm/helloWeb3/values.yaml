# Default values for
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: us-docker.pkg.dev/helloweb3-439906/helloweb3-docker-repository/polygon # nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.1ab"

imagePullSecrets: []
nameOverride: "helloweb3"
fullnameOverride: "helloweb3"

secret:
  secretKeyRefName: polygon-api-key
  secretKeyVariableName: "POLYGON_API_KEY"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
# podAnnotations:
#   prometheus.io/scrape: "true"
#   prometheus.io/port: "3000"
#   prometheus.io/path: "/metrics"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

deployment:
  containerPort: 8080

service:
  type: ClusterIP #LoadBalancer
  port: 3000
  targetPort: 8080 #http #8080
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    # cloud.google.com/load-balancer-type: "External"

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "cert-manager-global"  # ClusterIssuer name
    kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "*.app.randomdnsnamerighthere.com"
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: helloweb3
            port:
              number: 3000
    - host: app.randomdnsnamerighthere.com
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: helloweb3
            port:
              number: 3000
  tls: 
   - secretName: cert-manager-private-key
     hosts:
       - app.randomdnsnamerighthere.com
      
grafana:
  serviceName: grafana
  namespace: monitoring
  port: 80
  ingress:
    name: grafana-ingress
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "cert-manager-global"  # ClusterIssuer name
      kubernetes.io/ingress.class: "nginx"
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: "*.grafana.randomdnsnamerighthere.com"
        paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: grafana
              port:
                number: 80
      - host: grafana.randomdnsnamerighthere.com
        paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: grafana
              port:
                number: 80
    tls: 
    - secretName: cert-manager-private-key
      hosts:
        - grafana.randomdnsnamerighthere.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# # Prom & Grafana
# metrics:
#   enabled: true
#   service:
#     annotations:
#       prometheus.io/scrape: "true"
#       prometheus.io/port: "3000"
#       prometheus.io/path: "/metrics"
#     type: LoadBalancer
#     port: 3000
#     targetPort: 3000