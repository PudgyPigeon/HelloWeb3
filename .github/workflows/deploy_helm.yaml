name: Deploy Helm 

on:
  workflow_run:
    workflows: ["Build and Push to Artifact Registry"]
    types:
      - completed
  workflow_dispatch:  # Allows manual triggering of the workflow
    inputs:
      tag:
        description: 'Tag to use for the Docker image'
        required: true
        default: 'v0.0.1ab'

env:
  PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
  REGION: us
  ARTIFACT_REPO_NAME: ${{ vars.GOOGLE_ARTIFACT_REGISTRY_NAME }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
  DOCKER_IMAGE_NAME: "polygon"
  DOCKER_BUILD_CONTEXT: "."
  DOCKERFILE_PATH: "Dockerfile.helloweb3"

jobs:
  deploy_helm_to_gke:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:

      - name: "Checkout"
        uses: "actions/checkout@v4"

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ env.SERVICE_ACCOUNT_KEY }}"

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Set FULL_IMAGE_NAME"
        run: echo "FULL_IMAGE_NAME=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO_NAME }}/${{ env.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV

      - name: Kubectl + Kubeconfig
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: "Set FULL_IMAGE_NAME"
        run: echo "FULL_IMAGE_NAME=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO_NAME }}/${{ env.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV

      - name: Run Helm Commands
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG=${{ github.event.inputs.tag }}
          else
            TAG=${{ github.ref_name }}
          fi

          helm upgrade --install helloweb3 ./helm/helloWeb3 \
            --namespace helloweb3 \
            --set image.repository=${{ env.FULL_IMAGE_NAME }} \
            --set image.tag=:$TAG
